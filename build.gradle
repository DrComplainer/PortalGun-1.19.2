plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name 'Fabric'
        url 'https://maven.fabricmc.net/'
    }
    maven {
        name = 'JitPack'
        url = 'https://jitpack.io'
    }
    maven { url 'https://hephaestus.dev/release' }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url 'https://maven.shedaniel.me' }
    maven { url 'https://maven.fabricmc.net/io/github/prospector/modmenu' }
    maven { url 'https://maven.terraformersmc.com/releases/' }

    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }

    // for parchment
    maven {
        url = "https://maven.parchmentmc.org"
    }

    jcenter()
}


sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/portalgun.accesswidener")
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
//    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    mappings loom.layered() {
        officialMojangMappings() {
            setNameSyntheticMembers(false)
        }
        parchment("org.parchmentmc.data:parchment-1.19.3:2022.12.18")
    }

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

//    modImplementation ('com.github.iPortalTeam.ImmersivePortalsMod:imm_ptl_core:v2.4.8-mc1.19.3'){
//        exclude(group: "net.fabricmc.fabric-api")
//        transitive(false)
//    }
//    modImplementation ('com.github.iPortalTeam.ImmersivePortalsMod:q_misc_util:v2.4.8-mc1.19.3'){
//        exclude(group: "net.fabricmc.fabric-api")
//        transitive(false)
//    }

    modImplementation ('qouteall:imm_ptl_core:2.5.1.6'){
        exclude(group: "net.fabricmc.fabric-api")
        transitive(false)
    }
    modImplementation ('qouteall:q_misc_util:2.5.1.6'){
        exclude(group: "net.fabricmc.fabric-api")
        transitive(false)
    }
    modRuntimeOnly ('qouteall:imm_ptl_19:2.5.1.6'){
        exclude(group: "net.fabricmc.fabric-api")
        transitive(false)
    }

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    modImplementation ('software.bernie.geckolib:geckolib-fabric-1.19.3:4.0.4') {
        transitive(false)
    }

    modImplementation('com.terraformersmc:modmenu:5.0.2')

    modImplementation("me.shedaniel.cloth:cloth-config-fabric:9.0.94") {
        exclude(group: "net.fabricmc.fabric-api")
    }

//    // Replace modImplementation with modApi if you expose components in your own API
//    modApi "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.0.1"
//    // Includes Cardinal Components API as a Jar-in-Jar dependency (optional but recommended)
//    include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.0.1"
//
//    modApi "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.0.1"
//    // Includes Cardinal Components API as a Jar-in-Jar dependency (optional but recommended)
//    include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.0.1"
}

shadowJar {
    dependencies {
        exclude(dependency("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"))
        exclude(dependency("net.fabricmc:fabric-loader:${project.loader_version}"))
    }
}
afterEvaluate {
    remapJar {
        input = file("${project.buildDir}/libs/$archivesBaseName-${version}-dev.jar")
        archiveName = "${archivesBaseName}-${version}-mc${project.minecraft_version}-fabric.jar"
    }
}
processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

task additionalCopy(type: Copy) {
    from file("${project.buildDir}/libs/$archivesBaseName-${version}-mc${project.minecraft_version}-fabric.jar")
    into file("${project.buildDir}/to_upload")
}
