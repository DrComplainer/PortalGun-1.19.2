package tk.meowmc.portalgun;

import net.minecraft.nbt.CompoundTag;
import net.minecraft.server.level.ServerLevel;
import net.minecraft.world.level.saveddata.SavedData;
import qouteall.q_misc_util.Helper;
import qouteall.q_misc_util.MiscHelper;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import java.util.stream.Collectors;

public class PortalGunRecord extends SavedData {
    public static enum PortalGunKind {
        _2x1
    }
    
    public static record PortalGunInfo(
        UUID portal1Id, UUID portal2ID
    ) {}
    
    private final Map<UUID, Map<PortalGunKind, PortalGunInfo>> data;
    
    public PortalGunRecord(Map<UUID, Map<PortalGunKind, PortalGunInfo>> data) {this.data = data;}
    
    public static PortalGunRecord get() {
        ServerLevel overworld = MiscHelper.getServer().overworld();
        
        return overworld.getDataStorage().computeIfAbsent(
            PortalGunRecord::load,
            () -> {
                Helper.log("Portal gun record initialized ");
                return new PortalGunRecord(new HashMap<>());
            },
            "portal_gun_record"
        );
    }
    
    @Override
    public CompoundTag save(CompoundTag compoundTag) {
        CompoundTag data = new CompoundTag();
        compoundTag.put("data", data);
        
        // generated by GitHub Copilot
        for (Map.Entry<UUID, Map<PortalGunKind, PortalGunInfo>> entry : this.data.entrySet()) {
            CompoundTag playerData = new CompoundTag();
            data.put(entry.getKey().toString(), playerData);
            
            for (Map.Entry<PortalGunKind, PortalGunInfo> portalGunEntry : entry.getValue().entrySet()) {
                CompoundTag portalGunData = new CompoundTag();
                playerData.put(portalGunEntry.getKey().toString(), portalGunData);
                
                portalGunData.putUUID("portal1Id", portalGunEntry.getValue().portal1Id());
                portalGunData.putUUID("portal2Id", portalGunEntry.getValue().portal2ID());
            }
        }
        return compoundTag;
    }
    
    // generated by GitHub Copliot
    public static PortalGunRecord load(CompoundTag compoundTag) {
        CompoundTag data = compoundTag.getCompound("data");
        
        return new PortalGunRecord(data.getAllKeys().stream().collect(Collectors.toMap(
            UUID::fromString,
            (key) -> {
                CompoundTag playerData = data.getCompound(key);
                
                return playerData.getAllKeys().stream().collect(Collectors.toMap(
                    PortalGunKind::valueOf,
                    (portalGunKey) -> {
                        CompoundTag portalGunData = playerData.getCompound(portalGunKey);
                        
                        return new PortalGunInfo(
                            portalGunData.getUUID("portal1Id"),
                            portalGunData.getUUID("portal2Id")
                        );
                    }
                ));
            }
        )));
    }
}
